---
- name: update apt-cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: ensure required packages
  apt:
    name:
      - python3-pip
      - python-boto
    state: present
    cache_valid_time: 3600

- name: install boto3
  pip:
    executable: pip3
    name: boto3
    state: present

- name: gather ec2 facts
  ec2_facts:

- name: set name for instance
  script: "/usr/bin/env AWS_DEFAULT_REGION={{ ansible_ec2_placement_region }} {{ role_path }}/files/ec2_hostname.py {{ ansible_ec2_instance_id }} {{ '-n {}'.format(ec2_hostname_name) if ec2_hostname_name else '' }} {{ '-p {}'.format(ec2_hostname_name_prefix) if ec2_hostname_name_prefix else '' }} {{ '-a' if ec2_hostname_name_prefix_asg else '' }} {{ '-r {}'.format(ec2_hostname_retries) if ec2_hostname_retries else '' }} {{ '--overwrite' if ec2_hostname_overwrite else '' }} {{ '--verbose' if ec2_hostname_verbose else '' }} {{ '--debug' if ec2_hostname_debug else '' }}"

- name: retrieve all tags on an instance
  ec2_tag:
    region: "{{ ansible_ec2_placement_region }}"
    resource: "{{ ansible_ec2_instance_id }}"
    state: list
  register: ec2_tags
  when: ec2_hostname_linux_hostname

- name: set hostname
  hostname:
    name: "{{ ec2_tags.tags.Name }}"

- name: set hostname in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: '127.0.0.1 localhost {{ ec2_tags.tags.Name }}'
    owner: root
    group: root
    mode: 0644
